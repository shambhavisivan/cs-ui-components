/* COLORS */
$cs-black: #000000;
$cs-gray-dark-1: #080707;
$cs-gray-dark-2: #3e3e3c;
$cs-gray-dark-3: #444444;
$cs-gray-dark-4: #5e5d60;
$cs-gray-dark-5: #706e6b;
$cs-gray-dark-6: #747474;
$cs-gray-dark-7: #777f8b;
$cs-gray-medium-1: #999999;
$cs-gray-medium-2: #b0adab;
$cs-gray-medium-3: #c9c7c5;
$cs-gray-light-1: #d8d8d8;
$cs-gray-light-2: #dddbda;
$cs-gray-light-3: #dddddd;
$cs-gray-light-4: #ebebeb;
$cs-gray-light-5: #ecebea;
$cs-gray-light-6: #f2f3f3;
$cs-gray-light-7: #f8f8f8;
$cs-gray-light-8: #f4f6f9;
$cs-gray-light-9: #fdfdfd;
$cs-gray-light-10: #f3f2f2;
$cs-gray-light-11: #fafaf9;
$cs-blue-sf: #0070d2;
$cs-blue: #00abd3;
$cs-blue-dark-1: #16325c;
$cs-blue-dark-2: #1b3d71;
$cs-blue-dark-3: #54698d;
$cs-blue-dark-4: #164A85;
$cs-blue-medium-1: #295497;
$cs-blue-medium-2: #005fb2;
$cs-blue-medium-3: #0062b8;
$cs-blue-medium-4: #016fc0;
$cs-blue-medium-5: #1589ee;
$cs-blue-medium-6: #5eb4ff;
$cs-blue-light-1: #d8edff;
$cs-blue-light-2: #e3f3ff;
$cs-blue-light-3: #f0f8fc;
$cs-blue-light-4: #e4ebf6;
$cs-blue-light-5: #f5f9fd;
$cs-blue-light-6: #eef1f6;
$cs-green-dark-1: #1f7245;
$cs-green-dark-2: #04844b;
$cs-green-medium-1: #009540;
$cs-green-medium-2: #5bb85c;
$cs-green-light-1: #4bca81;
$cs-mint: #3cdbc0;
$cs-purple: #4a26ab;
$cs-purple-dark-1: #402294;
$cs-purple-medium-1: #7f8de1;
$cs-orange-dark-1: #9a6319;
$cs-orange-medium-1: #ffa429;
$cs-orange-medium-2: #ffb75d;
$cs-orange-light-1: #fff2e2;
$cs-red-medium-1: #d81c2a;
$cs-red-medium-2: #c23934;
$cs-red-medium-3: #d9675d;
$cs-red-light-1: #fcedee;
$cs-white: #ffffff;

// Colors for demo app dark theme
$cs-dark-theme: #181818;
$cs-dark-theme-2: #242424;
$cs-dark-theme-3: #343333;

$css4: true;

$lightVariables: (
	--csd-access-c: $cs-gray-dark-2,
	--csd-access-h-c: $cs-gray-dark-1,
	--csd-access-chip-c: $cs-white,
	--csd-access-chip-bg: $cs-blue-sf,
	--csd-access-chip-br: $cs-blue-sf,
	--csd-access-chip-strong-em-c: $cs-white,
	--csd-access-chip-strong-em-br: $cs-purple,
	--csd-access-chip-strong-em-bg: $cs-purple,
	--csd-access-chip-strong-br: $cs-gray-dark-5,
	--csd-access-chip-strong-bg: $cs-gray-dark-5,
	--csd-access-link-c: $cs-blue-sf,
	--csd-access-link-hover-c: $cs-purple,
	--csd-access-link-active-c: $cs-purple-medium-1,
	--csd-access-title-c: $cs-gray-dark-1,
	--csd-access-subtitle-c: $cs-purple,
	--csd-access-table-header-c: $cs-white,
	--csd-access-table-header-bg: $cs-purple,
	--csd-access-table-header-br: rgba($cs-white, 0.2),

	--csd-app-body-bg: $cs-gray-light-5,
	--csd-app-header-bg: $cs-white,

	--csd-h2-c: $cs-gray-dark-1,
	--csd-h3-c: $cs-gray-dark-3,
	--csd-p-c: $cs-gray-dark-3,

	--csd-header-tab-c: $cs-gray-dark-3,
	--csd-header-tab-active-bg: $cs-gray-light-6,
	--csd-header-tab-active-alt-c: $cs-gray-dark-1,
	--csd-header-tab-active-c: $cs-purple,

	--csd-button-preview-table-bg: $cs-white,
	--csd-button-preview-cell-bg: $cs-purple,
	--csd-button-preview-br: $cs-gray-light-3,
	--csd-button-preview-c: $cs-black,
	--csd-code-preview-bg: $cs-gray-light-7,
	--csd-code-c: $cs-gray-dark-1,

	--csd-colors-grid-focus-shadow: $cs-blue-sf,
	--csd-colors-grid-bg: $cs-white,
	--csd-colors-grid-c: $cs-gray-medium-1,
	--csd-colors-grid-name-c: $cs-gray-dark-2,

	--csd-components-list-wrapper-bg: $cs-dark-theme-2,
	--csd-components-search-field-br: $cs-gray-dark-6,
	--csd-components-api-bg: $cs-white,
	--csd-components-modal-bg: $cs-white,
	--csd-components-sidebar-bg: $cs-purple,
	--csd-components-link-c: $cs-gray-dark-3,
	--csd-components-link-hover-bg: $cs-purple,
	--csd-components-link-hover-c: $cs-white,

	--csd-criterion-link-decoration-c: $cs-blue-sf,

	--csd-chip-bg: $cs-mint,
	--csd-chip-demo-c: $cs-gray-dark-1,
	--csd-icon-sidebar-fill: $cs-white,
	--csd-icon-fill: $cs-gray-dark-5,
	--csd-btn-bg: $cs-white,
	--csd-transparent-bg: $cs-blue-dark-2,
	--csd-shadow-light: rgba($cs-black, 0.12),
	--csd-shadow-medium: rgba($cs-black, 0.2),
	--csd-shadow-dark: rgba($cs-black, 0.5),

	--csd-custom-bg-purple: $cs-purple,
	--csd-custom-bg-mint: $cs-mint,
	--csd-custom-bg-blue: $cs-blue-sf,
	--csd-custom-br-purple: $cs-purple,
	--csd-custom-br-mint: $cs-mint,
	--csd-custom-br-blue: $cs-blue-sf,

	--csd-icons-search-field-bg: $cs-white,
	--csd-icons-search-field-c: $cs-gray-dark-4,
	--csd-icons-search-field-placeholder-c: $cs-gray-medium-1,
	--csd-icons-container-bg: $cs-white,
	--csd-icons-paragraph-c: $cs-gray-dark-2,
	--csd-icons-custom-fill: $cs-mint,

	--csd-important-chip-bg: $cs-mint,
	--csd-important-chip-c: $cs-gray-dark-1,

	--csd-neutral-chip-bg: rgba($cs-white, 0.35),
	--csd-neutral-chip-c: $cs-gray-dark-5,
	--csd-neutral-chip-br: $cs-gray-dark-5,

	--csd-prop-custom-bg: $cs-gray-light-3,
	--csd-prop-custom-c: $cs-gray-dark-6,
	--csd-prop-table-header-bg: $cs-purple !important,
	--csd-prop-table-header-c: $cs-white !important,
	--csd-prop-table-bg: $cs-white,
	--csd-prop-table-c: $cs-gray-dark-2,
	--csd-prop-table-br: $cs-gray-light-3,
	--csd-prop-table-row-stripes-bg-light: $cs-white,
	--csd-prop-table-row-stripes-bg-dark: $cs-gray-light-7,
	--csd-prop-code-br: $cs-gray-light-1,
	--csd-prop-sidebar-bg: $cs-purple,
	--csd-prop-sidebar-hover-bg: $cs-purple-dark-1,
	--csd-prop-sidebar-br: rgba($cs-white, 0.2),
	--csd-prop-sidebar-active-br: rgba($cs-white, 0.6),

	--csd-primary-variant-c: $cs-black,
	--csd-primary-variant-bg: $cs-white,
	--csd-primary-variant-br: $cs-gray-light-1,

	--csd-secondary-variant-c: $cs-black,
	--csd-secondary-variant-bg: $cs-gray-light-5,
	--csd-secondary-variant-br: $cs-gray-light-1,

	--csd-preview-main-heading-title-c: $cs-black,
	--csd-preview-main-heading-subtitle-c: $cs-gray-dark-6,

	--csd-release-notes-code-snippet-bg: $cs-white,

	--csd-sidebar-component-form-icon-fill: $cs-gray-medium-1,
	--csd-sidebar-search-field-c: $cs-white,
	--csd-sidebar-search-field-bg: $cs-gray-dark-4,
	--csd-sidebar-search-field-placeholder-c: $cs-gray-light-4,
	--csd-sidebar-link-c: $cs-white,
	--csd-sidebar-link-hover-c: $cs-white,
	--csd-sidebar-info-bg: $cs-white,
	--csd-sidebar-toggle-graphic-fill: $cs-white,
	--csd-sidebar-input-bg: rgba($cs-white, 0.2),
	--csd-sidebar-scroll-bg: rgba($cs-white, 0.2),
	--csd-sidebar-link-hover-bg: rgba($cs-black,0.4),
	--csd-sidebar-link-active-bg: rgba($cs-black,0.6),

	// May need to remove these
	--csd-table-row-bg: $cs-white,
	--csd-table-row-br: $cs-gray-light-3,
	--csd-table-prop-api-bg: $cs-gray-light-5,
	--csd-table-helper-bg: $cs-gray-light-6,
	--csd-table-head-row-bg: $cs-purple,
	--csd-table-head-row-c: $cs-white,
	--csd-table-backlog-bg: $cs-gray-medium-1,

	--csd-dropdown-purple-bg: $cs-purple,
	--csd-spinner-black-bg: $cs-black,
	--csd-image-black-bg: $cs-black,
	--csd-divider-br: $cs-gray-medium-3,
	--csd-transparent: transparent
);

/* Dark theme support */
$darkVariables: (
	--csd-access-c: $cs-gray-light-1,
	--csd-access-h-c: $cs-gray-light-6,
	--csd-access-chip-c: $cs-black,
	--csd-access-chip-bg: $cs-blue-medium-6,
	--csd-access-chip-br: $cs-blue-medium-6,
	--csd-access-chip-strong-em-c: $cs-black,
	--csd-access-chip-strong-em-br: $cs-purple-medium-1,
	--csd-access-chip-strong-em-bg: $cs-purple-medium-1,
	--csd-access-chip-strong-br: $cs-gray-medium-1,
	--csd-access-chip-strong-bg: $cs-gray-medium-1,
	--csd-access-link-c: $cs-blue-medium-6,
	--csd-access-link-hover-c: $cs-mint,
	--csd-access-link-active-c: $cs-green-light-1,
	--csd-access-title-c: $cs-white,
	--csd-access-subtitle-c: $cs-mint,
	--csd-access-table-header-c: $cs-white,
	--csd-access-table-header-bg: $cs-purple,
	--csd-access-table-header-br: rgba($cs-white, 0.2),

	--csd-app-body-bg: $cs-dark-theme,
	--csd-app-header-bg: $cs-dark-theme-2,

	--csd-h2-c: $cs-white,
	--csd-h3-c: $cs-gray-medium-2,
	--csd-p-c: $cs-white,

	--csd-header-tab-c: $cs-gray-light-1,
	--csd-header-tab-active-bg: $cs-dark-theme,
	--csd-header-tab-active-alt-c: $cs-white,
	--csd-header-tab-active-c: $cs-purple,

	--csd-button-preview-table-bg: $cs-dark-theme-2,
	--csd-button-preview-cell-bg: $cs-dark-theme-2,
	--csd-button-preview-br: $cs-gray-dark-3,
	--csd-button-preview-c: $cs-white,
	--csd-code-preview-bg: $cs-dark-theme-3,
	--csd-code-c: $cs-white,

	--csd-colors-grid-focus-shadow: $cs-blue-sf,
	--csd-colors-grid-bg: $cs-dark-theme-3,
	--csd-colors-grid-c: $cs-white,
	--csd-colors-grid-name-c: $cs-white,

	--csd-components-list-wrapper-bg: $cs-dark-theme-2,
	--csd-components-search-field-br: $cs-gray-dark-6,
	--csd-components-api-bg: $cs-dark-theme-2,
	--csd-components-modal-bg: $cs-white,
	--csd-components-sidebar-bg: $cs-purple,
	--csd-components-link-c: $cs-white,
	--csd-components-link-hover-bg: $cs-purple,
	--csd-components-link-hover-c: $cs-white,

	--csd-criterion-link-decoration-c: $cs-blue-sf,

	--csd-chip-bg: $cs-mint,
	--csd-chip-demo-c: $cs-gray-dark-1,
	--csd-icon-sidebar-fill: $cs-white,
	--csd-icon-fill: $cs-white,
	--csd-btn-bg: $cs-white,
	--csd-transparent-bg: $cs-blue-dark-2,
	--csd-shadow-light: rgba($cs-black, 0.12),
	--csd-shadow-medium: rgba($cs-black, 0.2),
	--csd-shadow-dark: rgba($cs-black, 0.5),

	--csd-custom-bg-purple: $cs-purple,
	--csd-custom-bg-mint: $cs-mint,
	--csd-custom-bg-blue: $cs-blue-sf,
	--csd-custom-br-purple: $cs-purple,
	--csd-custom-br-mint: $cs-mint,
	--csd-custom-br-blue: $cs-blue-sf,

	--csd-icons-search-field-bg: $cs-dark-theme-3,
	--csd-icons-search-field-c: $cs-white,
	--csd-icons-search-field-placeholder-c: $cs-gray-medium-1,
	--csd-icons-container-bg: $cs-dark-theme-3,
	--csd-icons-paragraph-c: $cs-white,
	--csd-icons-custom-fill: $cs-mint,

	--csd-important-chip-bg: $cs-mint,
	--csd-important-chip-c: $cs-gray-dark-1,

	--csd-neutral-chip-bg: transparent,
	--csd-neutral-chip-c: $cs-gray-light-1,
	--csd-neutral-chip-br: $cs-gray-dark-3,

	--csd-prop-custom-bg: $cs-dark-theme-2,
	--csd-prop-custom-c: $cs-white,
	--csd-prop-table-header-bg: $cs-purple !important,
	--csd-prop-table-header-c: $cs-white !important,
	--csd-prop-table-bg: $cs-dark-theme-2,
	--csd-prop-table-c: $cs-white,
	--csd-prop-table-br: $cs-gray-dark-3,
	--csd-prop-table-row-stripes-bg-light: $cs-dark-theme-2,
	--csd-prop-table-row-stripes-bg-dark: $cs-dark-theme,
	--csd-prop-code-br: $cs-gray-dark-3,
	--csd-prop-sidebar-bg: $cs-purple,
	--csd-prop-sidebar-hover-bg: $cs-purple-dark-1,
	--csd-prop-sidebar-br: rgba($cs-white, 0.2),
	--csd-prop-sidebar-active-br: rgba($cs-white, 0.6),

	--csd-primary-variant-c: $cs-white,
	--csd-primary-variant-bg: $cs-gray-dark-2,
	--csd-primary-variant-br: $cs-gray-dark-3,

	--csd-secondary-variant-c: $cs-white,
	--csd-secondary-variant-bg: $cs-dark-theme-2,
	--csd-secondary-variant-br: $cs-gray-dark-3,

	--csd-preview-main-heading-title-c: $cs-white,
	--csd-preview-main-heading-subtitle-c: $cs-gray-medium-2,

	--csd-release-notes-code-snippet-bg: $cs-dark-theme-3,

	--csd-sidebar-component-form-icon-fill: $cs-gray-medium-1,
	--csd-sidebar-search-field-c: $cs-white,
	--csd-sidebar-search-field-bg: $cs-gray-dark-4,
	--csd-sidebar-search-field-placeholder-c: $cs-gray-light-4,
	--csd-sidebar-link-c: $cs-white,
	--csd-sidebar-link-hover-c: $cs-white,
	--csd-sidebar-info-bg: $cs-white,
	--csd-sidebar-toggle-graphic-fill: $cs-white,
	--csd-sidebar-input-bg: rgba($cs-white, 0.2),
	--csd-sidebar-scroll-bg: rgba($cs-white, 0.2),
	--csd-sidebar-link-hover-bg: rgba($cs-black,0.4),
	--csd-sidebar-link-active-bg: rgba($cs-black,0.6),

	--csd-table-row-bg: $cs-white,
	--csd-table-row-br: $cs-gray-light-5,
	--csd-table-prop-api-bg: $cs-gray-light-5,
	--csd-table-helper-bg: $cs-gray-light-6,
	--csd-table-head-row-bg: $cs-purple,
	--csd-table-head-row-c: $cs-white,
	--csd-table-backlog-bg: $cs-gray-medium-1,

	--csd-dropdown-purple-bg: $cs-purple,
	--csd-spinner-black-bg: $cs-black,
	--csd-image-black-bg: $cs-black,
	--csd-divider-br: $cs-gray-dark-3,
	--csd-transparent: transparent
);

// Every variable that uses main color needs to be set in #root as well
#root {
	//--cs-button-c: #{var(--main-c)};
}

// Here we transfer the variables from the map to the :root element
@if($css4) {
	.csd-theme-light {
		@each $variable, $value in $lightVariables {
			#{$variable}: $value;
		}
	}

	.csd-theme-dark {
		@each $variable, $value in $darkVariables {
			#{$variable}: $value;
		}
	}
}

/*** HELPER FUNCTIONS ***/

// change value type to string
@function to-string($value) {
	@return inspect($value);
}

/*** BACKGROUND COLOR MIXINS ***/

/* SET BACKGROUND COLOR */
// $variable: only CSS variable format
// ex. @include sbg(--csd-button-bg);
@mixin sbg($variable) {
	background: map-get($lightVariables, $variable);
	@supports(--css: variables) {
		background: unquote('var(' + $variable + ')');
	}
}

/* BACKGROUND DARKEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - background color to be darkened
// $opacity: opacity percentage of black background [value should be between 0 and 1; higher number means darker background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - background color to be darkened
// ex. @include bgd(--csd-button-bg, 0.4);
// ex. @include bgd(--csd-button-bg, 0.4, var(--main-c));
@mixin bgd($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		background: map-get($lightVariables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		background: map-get($lightVariables, $ie);
	} @else {
		background: $ie;
	}

	@supports(--css: variables) {
		background: unquote('var(' + $variable + ')');
		filter: brightness(1 - $opacity);
	}
}

/* BACKGROUND LIGHTEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - background color to be lightened
// $opacity: opacity percentage of white background [value should be between 0 and 1; higher number means lighter background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - background color to be lightened
// ex. @include bgl(--csd-button-bg, 0.4);
// ex. @include bgl(--csd-button-bg, 0.4, $blue-sf);
@mixin bgl($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		background: map-get($lightVariables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		background: map-get($lightVariables, $ie);
	} @else {
		background: $ie;
	}

	@supports(--css: variables) {
		background: unquote('var(' + $variable + ')');
		filter: brightness(1 + $opacity);
	}
}

/*** TEXT COLOR MIXINS ***/

/* SET TEXT COLOR */
// $variable: only CSS variable format
// ex. @include sc(--csd-button-c);
@mixin sc($variable) {
	color: map-get($lightVariables, $variable);
	@supports(--css: variables) {
		color: unquote('var(' + $variable + ')');
	}
}

/* COLOR DARKEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - color to be darkened
// $opacity: opacity percentage of black background [value should be between 0 and 1; higher number means darker background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be darkened
// ex. @include cd(--csd-button-bg, 0.4);
// ex. @include cd(--csd-button-bg, 0.4, $blue-sf);
@mixin cd($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		color: map-get($lightVariables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		color: map-get($lightVariables, $ie);
	} @else {
		color: $ie;
	}

	@supports(--css: variables) {
		color: unquote('var(' + $variable + ')');
		filter: brightness(1 - $opacity);
	}
}

/* COLOR LIGHTEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - color to be lightened
// $opacity: opacity percentage of white background [value should be between 0 and 1; higher number means lighter background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be lightened
// ex. @include cl(--csd-button-bg, 0.4);
// ex. @include cl(--csd-button-bg, 0.4, $blue-sf);
@mixin cl($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		color: map-get($lightVariables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		color: map-get($lightVariables, $ie);
	} @else {
		color: $ie;
	}

	@supports(--css: variables) {
		color: unquote('var(' + $variable + ')');
		filter: brightness(1 + $opacity);
	}
}

/*** SVG FILL MIXINS ***/
/* SET FILL COLOR */
// $variable: only CSS variable format
// ex. @include sf(--csd-button-c);
@mixin sf($variable) {
	fill: map-get($lightVariables, $variable);
	@supports(--css: variables) {
		fill: unquote('var(' + $variable + ')');
	}
}

/* SVG FILL DARKEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - color to be darkened
// $opacity: opacity percentage of black background [value should be between 0 and 1; higher number means darker background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be darkened
// ex. @include cd(var(--csd-button-bg), 0.4);
// ex. @include cd(var(--csd-button-bg), 0.4, $blue-sf);
@mixin fd($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		fill: map-get($lightVariables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		fill: map-get($lightVariables, $ie);
	} @else {
		fill: $ie;
	}

	@supports(--css: variables) {
		fill: unquote('var(' + $variable + ')');
		filter: brightness(1 - $opacity);
	}
}

/* SVG FILL LIGHTEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - color to be lightened
// $opacity: opacity percentage of white background [value should be between 0 and 1; higher number means lighter background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be lightened
// ex. @include cl(var(--csd-button-bg), 0.4);
// ex. @include cl(var(--csd-button-bg), 0.4, $blue-sf);
@mixin fl($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		fill: map-get($lightVariables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		fill: map-get($lightVariables, $ie);
	} @else {
		fill: $ie;
	}

	@supports(--css: variables) {
		fill: unquote('var(' + $variable + ')');
		filter: brightness(1 + $opacity);
	}
}


/*** OTHER ***/

/* HELPER MIXIN FOR IE FALLBACK */
// Mixin temporally sets the $css4 variable to false, compiles the IE fallback, then makes the variable true again and compiles the css4 code
// It should contain properties that use css4 variables (other than background and text color), otherwise there will be unnecessary duplication of properties.
@mixin css4 {
	$css4: false !global;
	@content;
	$css4: true !global;
	@supports(--css: variables) {
		@content;
	}
}

/* CUSTOM VAR FUNCTION - borders, box-shadow, gradients... */
// $variable: only CSS variable format - this color will be returned from function
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be returned from function for IE only
// to change border variable to new color it is necessary to define it within @css4 mixin [see example]
// ex.
// @include css4 {
//	--border-c: #{var(--main-c)};
//	border: 1px solid cvar(--border-c, var(--main-c));
// }
@function cvar($variable, $ie: $variable) {
	@if($css4==false) {
		@if (str-slice(to-string($ie), 1, 4) == 'var(') {
			$length: str-length($ie) - 1;
			$helper: str-slice($ie, 5, $length);
			@return map-get($lightVariables, $helper);
		} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
			@return map-get($lightVariables, $ie);
		} @else {
			@return $ie;
		}
	} @else {
		@return unquote('var(' + $variable + ')');
	}
}

/* CUSTOM SCROLLBAR MIXIN */
@mixin custom-scrollbar {
	&::-webkit-scrollbar {
		width: 1rem;
	}

	&::-webkit-scrollbar-thumb {
		background-clip: padding-box;
		border-radius: 0.5rem;
		background-color: rgba(255, 255, 255, 0.2);
		@include css4 {
			border: 4px solid cvar(--csd-transparent);
		}
	}
}
