/* COLORS */

$cs-black: #000000;
$cs-gray-dark-1: #080707;
$cs-gray-dark-2: #3e3e3c;
$cs-gray-dark-3: #444444;
$cs-gray-dark-4: #5e5d60;
$cs-gray-dark-5: #706e6b;
$cs-gray-dark-6: #747474;
$cs-gray-dark-7: #777f8b;
$cs-gray-medium-1: #999999;
$cs-gray-medium-2: #b0adab;
$cs-gray-medium-3: #c9c7c5;
$cs-gray-light-1: #d8d8d8;
$cs-gray-light-2: #dddbda;
$cs-gray-light-3: #dddddd;
$cs-gray-light-4: #ebebeb;
$cs-gray-light-5: #ecebea;
$cs-gray-light-6: #f2f3f3;
$cs-gray-light-7: #f8f8f8;
$cs-gray-light-8: #f4f6f9;
$cs-gray-light-9: #fdfdfd;
$cs-gray-light-10: #f3f2f2;
$cs-gray-light-11: #fafaf9;
$cs-blue-sf: #0070d2;
$cs-blue: #00abd3;
$cs-blue-dark-1: #16325c;
$cs-blue-dark-2: #1b3d71;
$cs-blue-dark-3: #54698d;
$cs-blue-medium-1: #295497;
$cs-blue-medium-2: #005fb2;
$cs-blue-medium-3: #0062b8;
$cs-blue-medium-4: #016fc0;
$cs-blue-medium-5: #1589ee;
$cs-blue-light-1: #e3f3ff;
$cs-blue-light-2: #f0f8fc;
$cs-blue-light-3: #e4ebf6;
$cs-green-dark-1: #1f7245;
$cs-green-dark-2: #04844b;
$cs-green-medium-1: #009540;
$cs-green-medium-2: #5bb85c;
$cs-green-light-1: #4bca81;
$cs-orange-medium-1: #ffa429;
$cs-orange-medium-2: #ffb75d;
$cs-red-medium-1: #f91e0b;
$cs-red-medium-2: #c23934;
$cs-red-medium-3: #d9675d;
$cs-white: #ffffff;

/* OLD COLOR VALUES */
// $black: #000;
// $blue-dark-1: #16325c;
// $blue-dark-2: #30486c;
// $blue-dark-3: #1b3d71;
// $blue-dark-4: #54698d;
// $blue-light-1: #b6dde9;
// $blue-light-2: #c6e1ff;
// $blue-light-4: #e3f3ff;
// $blue-medium-1: #005fb2;
// $blue-medium-2: #0062b8;
// $blue-medium-3: #1589ee;
// $blue-medium-4: #1090ff;
// $blue-medium-5: #5897fb;
// $blue-medium-6: #5eb4ff;
// $gray-medium-17: #b0adab;
// $blue-sf: #0070d2;
// $gray-dark-1: #080707;
// $gray-dark-2: #444444;
// $gray-dark-3: #4e5c60;
// $gray-dark-4: #5e5d60;
// $gray-dark-5: #6a6a6a;
// $gray-dark-6: #747474;
// $gray-dark-7: #777f8b;
// $gray-dark-8: #3e3e3c;
// $gray-dark-9: #706e6b;
// $gray-light-2: #dddddd;
// $gray-light-5: #dddbda;
// $gray-light-6: #d8dde6;
// $gray-light-7: #ebebeb;
// $gray-light-8: #e0e5ee;
// $gray-light-10: #e4ebf6;
// $gray-light-11: #ecebea;
// $gray-light-12: #eef1f6;
// $gray-light-14: #f2f3f3;
// $gray-light-17: #f8f8f8;
// $gray-light-19: #f4f6f9;
// $gray-light-20: #fdfdfd;
// $gray-light-21: #fafaf9;
// $gray-light-26: #fafaf9;
// $gray-medium-1: #999999;
// $gray-medium-2: #969492;
// $gray-medium-4: #9a9ea5;
// $gray-medium-6: #aaaaaa;
// $gray-medium-7: #a9a9a9;
// $gray-medium-8: #b0b0b0;
// $gray-medium-11: #c9c7c5;
// $gray-medium-12: #a8b7c7;
// $green-dark-1: #04844b;
// $green-light-3: #4bca81;
// $orange-medium-1: #ffb75d;
// $orange-cs: #ffa429;
// $red-medium-1: #c11a1a;
// $red-medium-2: #c23934;
// $red-medium-3: #d81c2a;
// $red-medium-4: #d9675d;
// $green-medium-1: #06aad1;
// $white: #fff;

$css4: true;

// It is necessary to define the variables in sass map instead of :root, for compatibility reasons.
$variables: (
	--csgrid-main: $cs-blue-sf !important,
	--csgrid-secondary: $cs-white !important,
	--csgrid-tertiary: $cs-gray-dark-1 !important,

	--csgrid-theme-c: $cs-black,
	--csgrid-theme-bg: $cs-white,

	--csgrid-row-bg: $cs-white,
	--csgrid-row-hover-bg: $cs-gray-light-7,
	--csgrid-row-br: $cs-gray-light-2,

	--csgrid-header-row-c: $cs-gray-dark-4,
	--csgrid-header-row-bg: $cs-gray-light-7,

	--csgrid-container-after-c: $cs-gray-dark-5,
	--csgrid-container-after-selected-c: $cs-white,
	--csgrid-popup-box: $cs-gray-light-2,
	--csgrid-popup-br: $cs-gray-light-2,

	--csgrid-picklist-hover-bg: $cs-gray-light-8,
	--csgrid-picklist-selected-bg: $cs-blue-sf,
	--csgrid-picklist-selected-c: $cs-white,
	--csgrid-picklist-tick-br: $cs-white,
	--csgrid-picklist-br: rgba($cs-white, 0.25),

	--csgrid-datepicker-c: $cs-black,
	--csgrid-datepicker-bg: $cs-white,
	--csgrid-datepicker-arrow-c: $cs-gray-dark-5,
	--csgrid-datepicker-br: $cs-gray-light-2,
	--csgrid-datepicker-hover-bg: $cs-gray-light-7,
	--csgrid-datepicker-selected-bg: $cs-blue-sf,
	--csgrid-datepicker-selected-c: $cs-white,

	--cs-component-header-c: rgba($cs-gray-dark-2, 0.7),
	--cs-component-header-active-c: $cs-gray-dark-2,
	--cs-component-header-active-bg: $cs-gray-light-6,
	--cs-component-header-active-br: $cs-blue,

	--cs-component-bg: $cs-gray-light-5,
	--cs-component-preview-bg: $cs-gray-light-6,
	--cs-component-preview-br: $cs-gray-medium-1,
	--cs-component-preview-c: $cs-gray-medium-1,
	--cs-component-preview-custom-bg: $cs-gray-light-3,
	--cs-component-preview-custom-c: rgba($cs-gray-dark-5, 0.8),
	--cs-component-description-bg: $cs-gray-light-7,
	--cs-component-code-snippet-bg: $cs-gray-light-7,

	--cs-component-properties-table-bg: $cs-white,
	--cs-component-properties-table-br: $cs-gray-light-1,
	--cs-component-properties-table-prop-bg: $cs-gray-light-5,
	--cs-component-properties-table-header-bg: $cs-blue,
	--cs-component-properties-table-header-c: $cs-white,

	--cs-component-icons-c: $cs-gray-dark-2,
	--cs-component-icons-bg: $cs-white,

	--cs-component-chip-label-bg: rgba($cs-white, 0.34),
	--cs-component-chip-label-c: $cs-gray-medium-1,
	--cs-component-chip-label-br: $cs-gray-medium-1,

	--cs-component-list-bg: $cs-gray-dark-3,
	--cs-component-list-c: $cs-white,
	--cs-component-list-search-bg: rgba($cs-white, 0.15),
	--cs-component-list-placeholder-c: rgba($cs-white, 0.75),
	--cs-component-list-hover-bg: $cs-blue,
	--cs-component-list-active-bg: rgba($cs-gray-dark-1, 0.25),
	--cs-component-list-toggle-bg: $cs-blue,
	--cs-component-list-toggle-fill: $cs-white,

	--cs-card-bg: $cs-white,
	--cs-card-br: $cs-gray-light-2,

	--cs-shadow-light: rgba($cs-black, 0.1),
	--cs-shadow-medium: rgba($cs-black, 0.22),
	--cs-shadow-dark: rgba($cs-black, 0.5),

	--cs-button-c: $cs-blue-sf,
	--cs-button-inverse-c: $cs-white,
	--cs-button-bg: $cs-white,
	--cs-button-alt-bg: $cs-blue-sf,
	--cs-button-br: $cs-gray-light-2,
	--cs-button-highlight-br: $cs-blue-sf,
	--cs-button-active-br: $cs-blue-sf,
	--cs-button-hover-c: $cs-gray-light-6,
	--cs-button-hover-bg: $cs-gray-light-8,
	--cs-button-hover-alt-c: $cs-blue-medium-2,
	--cs-button-disabled-c: $cs-gray-light-2,
	--cs-button-disabled-bg: $cs-gray-medium-3,
	--cs-button-icon-c: $cs-gray-dark-5,

	--cs-color-name-c: $cs-gray-dark-1,
	--cs-color-body-bg: $cs-white,
	--cs-color-body-c: $cs-gray-medium-1,

	--csgrid-input-bg: $cs-white,
	--csgrid-input-br: $cs-gray-light-2,
	--csgrid-input-active-br: $cs-blue-medium-5,
	--cs-input-active-bg: $cs-white,
	--cs-input-disabled-bg: $cs-gray-light-5,
	--cs-input-disabled-br: $cs-gray-medium-3,
	--cs-input-readonly-shadow-br: $cs-blue-sf,
	--csgrid-input-box: $cs-blue-sf,
	--cs-input-error-c: $cs-red-medium-1,
	--cs-input-error-br: $cs-red-medium-1,
	--cs-input-error-shadow: $cs-red-medium-1,
	--csgrid-input-icon-fill: $cs-gray-medium-2,

	--cs-input-number-bg: $cs-white,
	--cs-input-number-br: $cs-gray-light-2,
	--cs-input-number-active-br: $cs-blue-medium-5,
	--cs-input-number-active-bg: $cs-white,
	--cs-input-number-disabled-bg: $cs-gray-light-5,
	--cs-input-number-disabled-br: $cs-gray-medium-3,
	--cs-input-number-readonly-shadow-br: $cs-blue-sf,

	--cs-textarea-bg: $cs-white,
	--cs-textarea-br: $cs-gray-light-2,
	--cs-textarea-active-br: $cs-blue-medium-5,
	--cs-textarea-active-bg: $cs-white,
	--cs-textarea-disabled-bg: $cs-gray-light-5,
	--cs-textarea-disabled-br: $cs-gray-medium-3,

	--cs-select-bg: $cs-white,
	--cs-select-br: $cs-gray-light-2,
	--cs-select-active-br: $cs-blue-medium-5,
	--cs-select-active-bg: $cs-white,
	--cs-select-disabled-bg: $cs-gray-light-5,
	--cs-select-disabled-br: $cs-gray-medium-3,

	--cs-section-button-bg: $cs-gray-light-6,
	--cs-section-button-shadow: $cs-blue-sf,

	--cs-custom-select-dropdown-bg: $cs-white,
	--cs-custom-select-dropdown-br: $cs-gray-light-2,
	--cs-custom-select-dropdown-shadow: $cs-gray-light-5,
	--cs-custom-select-dropdown-hover-bg: $cs-gray-light-2,

	--cs-chip-bg-c: $cs-white,
	--cs-chip-neutral-bg: $cs-gray-light-6,
	--cs-chip-neutral-c: $cs-gray-medium-1,
	--cs-chip-neutral-br: $cs-gray-medium-1,
	--cs-chip-brand-bg: $cs-blue-sf,
	--cs-chip-brand-c: $cs-blue-sf,
	--cs-chip-brand-br: $cs-blue-sf,
	--cs-chip-warning-bg: $cs-orange-medium-2,
	--cs-chip-warning-c: $cs-orange-medium-2,
	--cs-chip-warning-br: $cs-orange-medium-2,
	--cs-chip-error-bg: $cs-red-medium-1,
	--cs-chip-error-c: $cs-red-medium-1,
	--cs-chip-error-br: $cs-red-medium-1,
	--cs-chip-success-bg: $cs-green-light-1,
	--cs-chip-success-c: $cs-green-light-1,
	--cs-chip-success-br: $cs-green-light-1,

	--cs-tooltip-bg: $cs-blue-dark-1,
	--cs-tooltip-c: $cs-white,
	--cs-tooltip-link-c: $cs-white,

	--cs-label-required-c: $cs-red-medium-1,

	--csgrid-transparent: transparent !important,

	--cs-tab-br: $cs-gray-light-2,
	--cs-tab-c: $cs-gray-dark-2,
	--cs-tab-active-c: $cs-gray-dark-1,
	--cs-tab-active-br: $cs-blue-medium-5,
	--cs-tab-hover-br: $cs-blue-sf,

	--cs-path-tab: $cs-gray-light-5,
	--cs-path-tab-hover: $cs-gray-light-2,
	--cs-path-tab-c: $cs-gray-dark-1,
	--cs-path-tab-active: $cs-blue-sf,
	--cs-path-tab-active-hover: $cs-blue-medium-2,
	--cs-path-tab-active-c: $cs-white,

	--cs-table-c: $cs-black,
	--cs-table-alt-c: $cs-blue-sf,
	--cs-table-row-bg: $cs-white,
	--cs-table-br: $cs-gray-light-2,
	--cs-table-row-active-bg: $cs-blue-sf,
	--cs-table-row-active-c: $cs-white,

	--csgrid-pagination-bg: $cs-white,
	--csgrid-pagination-br: $cs-gray-light-2,
	--csgrid-pagination-c: $cs-blue-sf,
	--csgrid-pagination-hover-bg: $cs-gray-light-8,
	--csgrid-pagination-icon-bg: $cs-gray-medium-2,

	--csgrid-checkbox-bg: $cs-white,
	--csgrid-checkbox-br: $cs-gray-light-2,
	--csgrid-checkbox-checked-br: $cs-blue-sf,
	--csgrid-checkbox-focus-br: $cs-blue-medium-5,
	--csgrid-checkbox-focus-box: $cs-blue-sf,
	--csgrid-checkbox-disabled-bg: $cs-gray-light-5,
	--csgrid-checkbox-disabled-br: $cs-gray-medium-3,
	--csgrid-checkbox-disabled-checked-br: $cs-gray-medium-1,
	--csgrid-checkbox-required-c: $cs-red-medium-2,
	--cs-checkbox-error-br: $cs-red-medium-2,
	--csgrid-checkbox-label-c: $cs-gray-dark-2,

	--csgrid-highlighted-disabled-c: rgba($cs-white, 0.5),

	--cs-toggle-c: $cs-gray-dark-2,
	--cs-toggle-br: $cs-gray-medium-2,
	--cs-toggle-bg: $cs-gray-medium-2,
	--cs-toggle-circle-bg: $cs-white,
	--cs-toggle-tick-br: $cs-white,
	--cs-toggle-hover-bg: $cs-gray-medium-2,
	--cs-toggle-checked-bg: $cs-blue-sf,
	--cs-toggle-checked-br: $cs-blue-sf,
	--cs-toggle-checked-hover-bg: $cs-blue-medium-1,
	--cs-toggle-checked-hover-br: $cs-blue-medium-1,
	--cs-toggle-disabled-bg: $cs-gray-medium-2,
	--cs-toggle-disabled-br: $cs-gray-medium-2,
	--cs-toggle-disabled-circle-bg: $cs-gray-light-2,
	--cs-toggle-focus-br: $cs-blue-medium-5,
	--cs-toggle-focus-box: $cs-blue-sf,
	--cs-toggle-required-c: $cs-red-medium-2,
	--cs-toggle-error-br: $cs-red-medium-2,

	--cs-modal-wrapper-bg: rgba($cs-gray-dark-1, 0.6),
	--cs-modal-bg: $cs-white,
	--cs-modal-footer-bg: $cs-gray-light-6,
	--cs-modal-br: $cs-gray-light-2,
	--cs-modal-close-bg: $cs-white,
	--cs-modal-close-hover-bg: rgba($cs-white, 0.75),
	--cs-modal-close-active-bg: rgba($cs-white, 0.5),
	--cs-modal-close-focus-box: $cs-gray-light-5,
	--cs-modal-close-focus-br: $cs-gray-light-5,
	--cs-modal-box: rgba($cs-black, 0.16),
	--cs-modal-c: $cs-gray-dark-1,
	--cs-modal-c-alt: $cs-gray-medium-2,

	--cs-toast-info-bg: $cs-gray-dark-5,
	--cs-toast-info-c: $cs-white,
	--cs-toast-info-fill: $cs-white,
	--cs-toast-success-bg: $cs-green-dark-2,
	--cs-toast-success-c: $cs-white,
	--cs-toast-success-fill: $cs-white,
	--cs-toast-warning-bg: $cs-orange-medium-2,
	--cs-toast-warning-c: $cs-gray-dark-1,
	--cs-toast-warning-fill: $cs-gray-dark-4,
	--cs-toast-warning-hover-fill: $cs-gray-dark-5,
	--cs-toast-warning-box: $cs-gray-dark-4,
	--cs-toast-warning-br: $cs-gray-dark-4,
	--cs-toast-error-bg: $cs-red-medium-2,
	--cs-toast-error-c: $cs-white,
	--cs-toast-error-fill: $cs-white,
	--cs-toast-close-fill: $cs-white,
	--cs-toast-hover-fill: rgba($cs-white, 0.75),
	--cs-toast-active-fill: rgba($cs-white, 0.5),
	--cs-toast-box: $cs-gray-light-5,
	--cs-toast-br: $cs-gray-light-5,

	--cs-alert-info-bg: $cs-gray-dark-5,
	--cs-alert-info-c: $cs-white,
	--cs-alert-info-fill: $cs-white,
	--cs-alert-warning-bg: $cs-orange-medium-2,
	--cs-alert-warning-c: $cs-gray-dark-4,
	--cs-alert-warning-fill: $cs-gray-dark-4,
	--cs-alert-warning-hover-fill: $cs-gray-dark-5,
	--cs-alert-warning-box: $cs-gray-dark-4,
	--cs-alert-warning-br: $cs-gray-dark-4,
	--cs-alert-error-bg: $cs-red-medium-2,
	--cs-alert-error-c: $cs-white,
	--cs-alert-error-fill: $cs-white,
	--cs-alert-offline-bg: $cs-gray-dark-3,
	--cs-alert-offline-c: $cs-white,
	--cs-alert-offline-fill: $cs-white,
	--cs-alert-close-fill: $cs-white,
	--cs-alert-hover-fill: rgba($cs-white, 0.75),
	--cs-alert-active-fill: rgba($cs-white, 0.5),
	--cs-alert-box: $cs-gray-light-5,
	--cs-alert-br: $cs-gray-light-5,

	--cs-spinner-bg: rgba($cs-white, 0.75),
	--cs-spinner-neutral-bg: $cs-gray-medium-2,
	--cs-spinner-brand-bg: $cs-blue-medium-5,

	--cs-main-header-neutral-bg: $cs-white,
	--cs-main-header-neutral-c: $cs-gray-dark-1,
	--cs-main-header-subtitle-c: $cs-gray-dark-2,
	--cs-main-header-neutral-icon: $cs-blue,
	--cs-main-header-brand-bg: $cs-blue-sf,
	--cs-main-header-brand-c: $cs-white,
	--cs-main-header-brand-icon: $cs-white,
);

// This will be used later for dark theme support
// $darkVariables: (
// 	--cs-main-c: #ff0000,
// 	--cs-main-bg: darkblue,
// 	--cs-main-br: $white,

// 	--cs-button-c: $blue-sf,
// 	--cs-button-bg: $white,
// 	--cs-button-br: $gray-light-6
// );

// Every variable that uses main color needs to be set in #root as well
#root {
	//--cs-button-c: #{var(--main-c)};
}

// Here we transfer the variables from the map to the :root element
@if($css4) {
	:root {
		@each $variable, $value in $variables {
			#{$variable}: $value;
		}
	}

	// This will be used later for dark theme support
	// .dark {
	// 	@each $variable, $value in $darkVariables {
	// 		#{$variable}: $value;
	// 	}
	// }
}

/*** HELPER FUNCTIONS ***/

// change value type to string
@function to-string($value) {
	@return inspect($value);
}

/*** BACKGROUND COLOR MIXINS ***/

/* SET BACKGROUND COLOR */
// $variable: only CSS variable format
// ex. @include sbg(--button-bg);
@mixin sbg($variable) {
	background: map-get($variables, $variable);
	@supports(--css: variables) {
		background: unquote('var(' + $variable + ')');
	}
}

/* BACKGROUND DARKEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - background color to be darkened
// $opacity: opacity percentage of black background [value should be between 0 and 1; higher number means darker background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - background color to be darkened
// ex. @include bgd(var(--button-bg), 0.4);
// ex. @include bgd(var(--button-bg), 0.4, var(--main-c));
@mixin bgd($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		background: map-get($variables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		background: map-get($variables, $ie);
	} @else {
		background: $ie;
	}

	@supports(--css: variables) {
		background: unquote('var(' + $variable + ')');
		filter: brightness(1 - $opacity);
	}
}

/* BACKGROUND LIGHTEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - background color to be lightened
// $opacity: opacity percentage of white background [value should be between 0 and 1; higher number means lighter background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - background color to be lightened
// ex. @include bgl(var(--button-bg), 0.4);
// ex. @include bgl(var(--button-bg), 0.4, $blue-sf);
@mixin bgl($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		background: map-get($variables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		background: map-get($variables, $ie);
	} @else {
		background: $ie;
	}

	@supports(--css: variables) {
		background: unquote('var(' + $variable + ')');
		filter: brightness(1 + $opacity);
	}
}

/*** TEXT COLOR MIXINS ***/

/* SET TEXT COLOR */
// $variable: only CSS variable format
// ex. @include sc(--button-c);
@mixin sc($variable) {
	color: map-get($variables, $variable);
	@supports(--css: variables) {
		color: unquote('var(' + $variable + ')');
	}
}

/* COLOR DARKEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - color to be darkened
// $opacity: opacity percentage of black background [value should be between 0 and 1; higher number means darker background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be darkened
// ex. @include cd(var(--button-bg), 0.4);
// ex. @include cd(var(--button-bg), 0.4, $blue-sf);
@mixin cd($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		color: map-get($variables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		color: map-get($variables, $ie);
	} @else {
		color: $ie;
	}

	@supports(--css: variables) {
		color: unquote('var(' + $variable + ')');
		filter: brightness(1 - $opacity);
	}
}

/* COLOR LIGHTEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - color to be lightened
// $opacity: opacity percentage of white background [value should be between 0 and 1; higher number means lighter background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be lightened
// ex. @include cl(var(--button-bg), 0.4);
// ex. @include cl(var(--button-bg), 0.4, $blue-sf);
@mixin cl($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		color: map-get($variables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		color: map-get($variables, $ie);
	} @else {
		color: $ie;
	}

	@supports(--css: variables) {
		color: unquote('var(' + $variable + ')');
		filter: brightness(1 + $opacity);
	}
}

/*** SVG FILL MIXINS ***/
/* SET FILL COLOR */
// $variable: only CSS variable format
// ex. @include sf(--button-c);
@mixin sf($variable) {
	fill: map-get($variables, $variable);
	@supports(--css: variables) {
		fill: unquote('var(' + $variable + ')');
	}
}

/* SVG FILL DARKEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - color to be darkened
// $opacity: opacity percentage of black background [value should be between 0 and 1; higher number means darker background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be darkened
// ex. @include cd(var(--button-bg), 0.4);
// ex. @include cd(var(--button-bg), 0.4, $blue-sf);
@mixin fd($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		fill: map-get($variables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		fill: map-get($variables, $ie);
	} @else {
		fill: $ie;
	}

	@supports(--css: variables) {
		fill: unquote('var(' + $variable + ')');
		filter: brightness(1 - $opacity);
	}
}

/* SVG FILL LIGHTEN */
// $variable: CSS variable or SCSS variable [ex. var(--color), $blue-sf] - color to be lightened
// $opacity: opacity percentage of white background [value should be between 0 and 1; higher number means lighter background]
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be lightened
// ex. @include cl(var(--button-bg), 0.4);
// ex. @include cl(var(--button-bg), 0.4, $blue-sf);
@mixin fl($variable, $opacity, $ie: $variable) {
	@if (str-slice(to-string($ie), 1, 4) == 'var(') {
		$length: str-length($ie) - 1;
		$helper: str-slice($ie, 5, $length);
		fill: map-get($variables, $helper);
	} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
		fill: map-get($variables, $ie);
	} @else {
		fill: $ie;
	}

	@supports(--css: variables) {
		fill: unquote('var(' + $variable + ')');
		filter: brightness(1 + $opacity);
	}
}


/*** OTHER ***/

/* HELPER MIXIN FOR IE FALLBACK */
// Mixin temporally sets the $css4 variable to false, compiles the IE fallback, then makes the variable true again and compiles the css4 code
// It should contain properties that use css4 variables (other than background and text color), otherwise there will be unnecessary duplication of properties.
@mixin css4 {
	$css4: false !global;
	@content;
	$css4: true !global;
	@supports(--css: variables) {
		@content;
	}
}

/* CUSTOM VAR FUNCTION - borders, box-shadow, gradients... */
// $variable: only CSS variable format - this color will be returned from function
// $ie [optional]: any color format [ex. var(--color), $blue-sf, #000, black] - used to set fallback for IE11 when needed - color to be returned from function for IE only
// to change border variable to new color it is necessary to define it within @css4 mixin [see example]
// ex.
// @include css4 {
//	--border-c: #{var(--main-c)};
//	border: 1px solid cvar(--border-c, var(--main-c));
// }
@function cvar($variable, $ie: $variable) {
	@if($css4==false) {
		@if (str-slice(to-string($ie), 1, 4) == 'var(') {
			$length: str-length($ie) - 1;
			$helper: str-slice($ie, 5, $length);
			@return map-get($variables, $helper);
		} @else if (str-slice(to-string($ie), 1, 2) == '--')  {
			@return map-get($variables, $ie);
		} @else {
			@return $ie;
		}
	} @else {
		@return unquote('var(' + $variable + ')');
	}
}