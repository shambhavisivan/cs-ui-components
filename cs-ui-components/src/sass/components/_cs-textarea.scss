// CS Input Textarea
//
// CS textarea input component.
.cs-textarea-wrapper {
	display: flex;
	flex-direction: column;
	position: relative;
	--cs-textarea-max-height-value: var(--cs-textarea-max-height);
	--cs-textarea-border-radius-value: var(--cs-textarea-border-radius);
	--cs-textarea-options-spacing-value: var(--cs-textarea-options-spacing);

	.cs-textarea-wrapper-inner {
		position: relative;

		.cs-btn.cs-textarea-expand-button {
			position: absolute;
			right: 0.25rem;
			bottom: 0.375rem;
			display: inline-flex;
			@include css4 {
				box-shadow: -5px 0px 10px 0px cvar(--cs-button-white-br);
			}

			&::before {
				@include sbg(--cs-input-bg);
			}

			&.cs-textarea-expanded {
				display: none;
			}
		}

		&:hover .cs-btn.cs-textarea-expand-button.cs-textarea-expanded {
			display: inline-flex;
		}
	}

	&.cs-textarea-wrapper-options .cs-tw-error {
		margin-inline-end: 0.25rem;
	}

	.cs-textarea {
		@include input;
		overflow: auto;
		min-height: 2.25rem;
		padding: 0.5rem 0.75rem;
		line-height: 1.5;
		resize: vertical;
		max-height: var(--cs-textarea-max-height-value, 100%);
		white-space: break-spaces;
		border-radius: var(--cs-textarea-border-radius-value, 0.25rem);
		padding-right: var(--cs-textarea-options-spacing-value, 0.75rem);

		&:read-only {
			padding: 0 var(--cs-textarea-options-spacing-value, 0) 0 0;
			resize: none;
			overflow: hidden;
			height: var(--cs-textarea-read-only-height);
			min-height: var(--cs-textarea-read-only-min-height, 2.25rem);
		}

		&.cs-textarea-error-tooltip {
			padding-right: var(--cs-textarea-options-spacing-value);
		}
	}
}

// Version
.component-version-textarea .version-preview {
	overflow: visible;
}

// Options
.cs-textarea-options {
	top: 0.5rem;
	display: flex;
	align-items: center;
	position: absolute;
	right: 0.5rem;

	.cs-custom-data-item {
		align-items: center;
		display: flex;

		&:not(:last-child),
        > *:not(:last-child) {
            margin-right: 0.25rem;
        }
	}
}